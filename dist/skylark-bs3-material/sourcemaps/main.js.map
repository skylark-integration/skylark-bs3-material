{"version":3,"sources":["main.js"],"names":["define","$","_addFormGroupFocus","element","$element","prop","closest","addClass","_toggleTypeFocus","$input","disabledToggleType","is","material","options","checkboxElements","radioElements","hover","state","$i","this","find","isDisabled","hasClass","length","toggleClass","_removeFormGroupFocus","removeClass","expr","notmdproc","obj","data","validate","input","ripples","checkbox","togglebutton","radio","arrive","autofill","withRipples","join","inputElements","togglebuttonElements","selector","filter","after","each","$formGroup","attr","wrap","removeAttr","input-lg","input-sm","legacySize","standardSize","placeholder","id","forAttribute","val","attachInputEventHandlers","document","on","e","evt","which","ctrlKey","metaKey","altKey","isValid","checkValidity","value","files","i","file","name","substring","loading","setInterval","$this","trigger","setTimeout","clearInterval","attachAutofillEventHandlers","focused","$inputs","parents","not","init","extend","$document","fn","self","defaults","Ripples","_defaults","_name","prototype","event","isTouch","type","append","$wrapper","children","relY","getRelY","relX","getRelX","rippleColor","getRipplesColor","$ripple","css","left","top","background-color","window","getComputedStyle","opacity","rippleOn","rippleEnd","rippleOut","getNewSize","Math","max","outerWidth","outerHeight","wrapperOffset","offset","originalEvent","touches","pageX","pageY","color","hasTransitionSupport","thisStyle","body","documentElement","style","undefined","transition","WebkitTransition","MozTransition","MsTransition","OTransition","test","navigator","userAgent","off","animate","remove","size","-ms-transform","-moz-transform","-webkit-transform","transform","width","height","margin-left","margin-top"],"mappings":"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","file":"../main.js","sourcesContent":["/* globals jQuery */\ndefine([\n    \"skylark-jquery\"\n],function($) {\n    // Selector to select only not already processed elements\n    $.expr[\":\"].notmdproc = function(obj) {\n        if ($(obj).data(\"mdproc\")) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    function _isChar(evt) {\n        if (typeof evt.which == \"undefined\") {\n            return true;\n        } else if (typeof evt.which == \"number\" && evt.which > 0) {\n            return (!evt.ctrlKey &&\n                !evt.metaKey &&\n                !evt.altKey &&\n                evt.which != 8 // backspace\n                &&\n                evt.which != 9 // tab\n                &&\n                evt.which != 13 // enter\n                &&\n                evt.which != 16 // shift\n                &&\n                evt.which != 17 // ctrl\n                &&\n                evt.which != 20 // caps lock\n                &&\n                evt.which != 27 // escape\n            );\n        }\n        return false;\n    }\n\n    function _addFormGroupFocus(element) {\n        var $element = $(element);\n        if (!$element.prop('disabled')) { // this is showing as undefined on chrome but works fine on firefox??\n            $element.closest(\".form-group\").addClass(\"is-focused\");\n        }\n    }\n\n    function _toggleDisabledState($element, state) {\n        var $target;\n        if ($element.hasClass('checkbox-inline') || $element.hasClass('radio-inline')) {\n            $target = $element;\n        } else {\n            $target = $element.closest('.checkbox').length ? $element.closest('.checkbox') : $element.closest('.radio');\n        }\n        return $target.toggleClass('disabled', state);\n    }\n\n    function _toggleTypeFocus($input) {\n        var disabledToggleType = false;\n        if ($input.is($.material.options.checkboxElements) || $input.is($.material.options.radioElements)) {\n            disabledToggleType = true;\n        }\n        $input.closest('label').hover(function() {\n                var $i = $(this).find('input');\n                var isDisabled = $i.prop('disabled'); // hack because the _addFormGroupFocus() wasn't identifying the property on chrome\n                if (disabledToggleType) {\n                    _toggleDisabledState($(this), isDisabled);\n                }\n                if (!isDisabled) {\n                    _addFormGroupFocus($i); // need to find the input so we can check disablement\n                }\n            },\n            function() {\n                _removeFormGroupFocus($(this).find('input'));\n            });\n    }\n\n    function _removeFormGroupFocus(element) {\n        $(element).closest(\".form-group\").removeClass(\"is-focused\"); // remove class from form-group\n    }\n\n    $.material = {\n        \"options\": {\n            // These options set what will be started by $.material.init()\n            \"validate\": true,\n            \"input\": true,\n            \"ripples\": true,\n            \"checkbox\": true,\n            \"togglebutton\": true,\n            \"radio\": true,\n            \"arrive\": true,\n            \"autofill\": false,\n\n            \"withRipples\": [\n                \".btn:not(.btn-link)\",\n                \".card-image\",\n                \".navbar a:not(.withoutripple)\",\n                \".dropdown-menu a\",\n                \".nav-tabs a:not(.withoutripple)\",\n                \".withripple\",\n                \".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"\n            ].join(\",\"),\n            \"inputElements\": \"input.form-control, textarea.form-control, select.form-control\",\n            \"checkboxElements\": \".checkbox > label > input[type=checkbox], label.checkbox-inline > input[type=checkbox]\",\n            \"togglebuttonElements\": \".togglebutton > label > input[type=checkbox]\",\n            \"radioElements\": \".radio > label > input[type=radio], label.radio-inline > input[type=radio]\"\n        },\n        \"checkbox\": function(selector) {\n            // Add fake-checkbox to material checkboxes\n            var $input = $((selector) ? selector : this.options.checkboxElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='checkbox-material'><span class='check'></span></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"togglebutton\": function(selector) {\n            // Add fake-checkbox to material checkboxes\n            var $input = $((selector) ? selector : this.options.togglebuttonElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='toggle'></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"radio\": function(selector) {\n            // Add fake-radio to material radios\n            var $input = $((selector) ? selector : this.options.radioElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='circle'></span><span class='check'></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"input\": function(selector) {\n            $((selector) ? selector : this.options.inputElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .each(function() {\n                    var $input = $(this);\n\n                    // Requires form-group standard markup (will add it if necessary)\n                    var $formGroup = $input.closest(\".form-group\"); // note that form-group may be grandparent in the case of an input-group\n                    if ($formGroup.length === 0 && $input.attr('type') !== \"hidden\" && !$input.attr('hidden')) {\n                        $input.wrap(\"<div class='form-group'></div>\");\n                        $formGroup = $input.closest(\".form-group\"); // find node after attached (otherwise additional attachments don't work)\n                    }\n\n                    // Legacy - Add hint label if using the old shorthand data-hint attribute on the input\n                    if ($input.attr(\"data-hint\")) {\n                        $input.after(\"<p class='help-block'>\" + $input.attr(\"data-hint\") + \"</p>\");\n                        $input.removeAttr(\"data-hint\");\n                    }\n\n                    // Legacy - Change input-sm/lg to form-group-sm/lg instead (preferred standard and simpler css/less variants)\n                    var legacySizes = {\n                        \"input-lg\": \"form-group-lg\",\n                        \"input-sm\": \"form-group-sm\"\n                    };\n                    $.each(legacySizes, function(legacySize, standardSize) {\n                        if ($input.hasClass(legacySize)) {\n                            $input.removeClass(legacySize);\n                            $formGroup.addClass(standardSize);\n                        }\n                    });\n\n                    // Legacy - Add label-floating if using old shorthand <input class=\"floating-label\" placeholder=\"foo\">\n                    if ($input.hasClass(\"floating-label\")) {\n                        var placeholder = $input.attr(\"placeholder\");\n                        $input.attr(\"placeholder\", null).removeClass(\"floating-label\");\n                        var id = $input.attr(\"id\");\n                        var forAttribute = \"\";\n                        if (id) {\n                            forAttribute = \"for='\" + id + \"'\";\n                        }\n                        $formGroup.addClass(\"label-floating\");\n                        $input.after(\"<label \" + forAttribute + \"class='control-label'>\" + placeholder + \"</label>\");\n                    }\n\n                    // Set as empty if is empty (damn I must improve this...)\n                    if ($input.val() === null || $input.val() == \"undefined\" || $input.val() === \"\") {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n\n                    // Support for file input\n                    if ($formGroup.find(\"input[type=file]\").length > 0) {\n                        $formGroup.addClass(\"is-fileinput\");\n                    }\n                });\n        },\n        \"attachInputEventHandlers\": function() {\n            var validate = this.options.validate;\n\n            $(document)\n                .on(\"keydown paste\", \".form-control\", function(e) {\n                    if (_isChar(e)) {\n                        $(this).closest(\".form-group\").removeClass(\"is-empty\");\n                    }\n                })\n                .on(\"keyup change\", \".form-control\", function() {\n                    var $input = $(this);\n                    var $formGroup = $input.closest(\".form-group\");\n                    var isValid = (typeof $input[0].checkValidity === \"undefined\" || $input[0].checkValidity());\n\n                    if ($input.val() === \"\") {\n                        $formGroup.addClass(\"is-empty\");\n                    } else {\n                        $formGroup.removeClass(\"is-empty\");\n                    }\n\n                    // Validation events do not bubble, so they must be attached directly to the input: http://jsfiddle.net/PEpRM/1/\n                    //  Further, even the bind method is being caught, but since we are already calling #checkValidity here, just alter\n                    //  the form-group on change.\n                    //\n                    // NOTE: I'm not sure we should be intervening regarding validation, this seems better as a README and snippet of code.\n                    //        BUT, I've left it here for backwards compatibility.\n                    if (validate) {\n                        if (isValid) {\n                            $formGroup.removeClass(\"has-error\");\n                        } else {\n                            $formGroup.addClass(\"has-error\");\n                        }\n                    }\n                })\n                .on(\"focusin\", \".form-control, .form-group.is-fileinput\", function() {\n                    _addFormGroupFocus(this);\n                })\n                .on(\"focusout\", \".form-control, .form-group.is-fileinput\", function() {\n                    _removeFormGroupFocus(this);\n                })\n                // make sure empty is added back when there is a programmatic value change.\n                //  NOTE: programmatic changing of value using $.val() must trigger the change event i.e. $.val('x').trigger('change')\n                .on(\"change\", \".form-group input\", function() {\n                    var $input = $(this);\n                    if ($input.attr(\"type\") == \"file\") {\n                        return;\n                    }\n\n                    var $formGroup = $input.closest(\".form-group\");\n                    var value = $input.val();\n                    if (value) {\n                        $formGroup.removeClass(\"is-empty\");\n                    } else {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n                })\n                // set the fileinput readonly field with the name of the file\n                .on(\"change\", \".form-group.is-fileinput input[type='file']\", function() {\n                    var $input = $(this);\n                    var $formGroup = $input.closest(\".form-group\");\n                    var value = \"\";\n                    $.each(this.files, function(i, file) {\n                        value += file.name + \", \";\n                    });\n                    value = value.substring(0, value.length - 2);\n                    if (value) {\n                        $formGroup.removeClass(\"is-empty\");\n                    } else {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n                    $formGroup.find(\"input.form-control[readonly]\").val(value);\n                });\n        },\n        \"ripples\": function(selector) {\n            $((selector) ? selector : this.options.withRipples).ripples();\n        },\n        \"autofill\": function() {\n            // This part of code will detect autofill when the page is loading (username and password inputs for example)\n            var loading = setInterval(function() {\n                $(\"input[type!=checkbox]\").each(function() {\n                    var $this = $(this);\n                    if ($this.val() && $this.val() !== $this.attr(\"value\")) {\n                        $this.trigger(\"change\");\n                    }\n                });\n            }, 100);\n\n            // After 10 seconds we are quite sure all the needed inputs are autofilled then we can stop checking them\n            setTimeout(function() {\n                clearInterval(loading);\n            }, 10000);\n        },\n        \"attachAutofillEventHandlers\": function() {\n            // Listen on inputs of the focused form (because user can select from the autofill dropdown only when the input has focus)\n            var focused;\n            $(document)\n                .on(\"focus\", \"input\", function() {\n                    var $inputs = $(this).parents(\"form\").find(\"input\").not(\"[type=file]\");\n                    focused = setInterval(function() {\n                        $inputs.each(function() {\n                            var $this = $(this);\n                            if ($this.val() !== $this.attr(\"value\")) {\n                                $this.trigger(\"change\");\n                            }\n                        });\n                    }, 100);\n                })\n                .on(\"blur\", \".form-group input\", function() {\n                    clearInterval(focused);\n                });\n        },\n        \"init\": function(options) {\n            this.options = $.extend({}, this.options, options);\n            var $document = $(document);\n\n            if ($.fn.ripples && this.options.ripples) {\n                this.ripples();\n            }\n            if (this.options.input) {\n                this.input();\n                this.attachInputEventHandlers();\n            }\n            if (this.options.checkbox) {\n                this.checkbox();\n            }\n            if (this.options.togglebutton) {\n                this.togglebutton();\n            }\n            if (this.options.radio) {\n                this.radio();\n            }\n            if (this.options.autofill) {\n                this.autofill();\n                this.attachAutofillEventHandlers();\n            }\n\n            if (document.arrive && this.options.arrive) {\n                if ($.fn.ripples && this.options.ripples) {\n                    $document.arrive(this.options.withRipples, function() {\n                        $.material.ripples($(this));\n                    });\n                }\n                if (this.options.input) {\n                    $document.arrive(this.options.inputElements, function() {\n                        $.material.input($(this));\n                    });\n                }\n                if (this.options.checkbox) {\n                    $document.arrive(this.options.checkboxElements, function() {\n                        $.material.checkbox($(this));\n                    });\n                }\n                if (this.options.radio) {\n                    $document.arrive(this.options.radioElements, function() {\n                        $.material.radio($(this));\n                    });\n                }\n                if (this.options.togglebutton) {\n                    $document.arrive(this.options.togglebuttonElements, function() {\n                        $.material.togglebutton($(this));\n                    });\n                }\n\n            }\n        }\n    };\n\n    /**\n     * Define the name of the plugin\n     */\n    var ripples = \"ripples\";\n\n\n    /**\n     * Get an instance of the plugin\n     */\n    var self = null;\n\n\n    /**\n     * Define the defaults of the plugin\n     */\n    var defaults = {};\n\n\n    /**\n     * Create the main plugin function\n     */\n    function Ripples(element, options) {\n        self = this;\n\n        this.element = $(element);\n\n        this.options = $.extend({}, defaults, options);\n\n        this._defaults = defaults;\n        this._name = ripples;\n\n        this.init();\n    }\n\n\n    /**\n     * Initialize the plugin\n     */\n    Ripples.prototype.init = function() {\n        var $element = this.element;\n\n        $element.on(\"mousedown touchstart\", function(event) {\n            /**\n             * Verify if the user is just touching on a device and return if so\n             */\n            if (self.isTouch() && event.type === \"mousedown\") {\n                return;\n            }\n\n\n            /**\n             * Verify if the current element already has a ripple wrapper element and\n             * creates if it doesn't\n             */\n            if (!($element.find(\".ripple-container\").length)) {\n                $element.append(\"<div class=\\\"ripple-container\\\"></div>\");\n            }\n\n\n            /**\n             * Find the ripple wrapper\n             */\n            var $wrapper = $element.children(\".ripple-container\");\n\n\n            /**\n             * Get relY and relX positions\n             */\n            var relY = self.getRelY($wrapper, event);\n            var relX = self.getRelX($wrapper, event);\n\n\n            /**\n             * If relY and/or relX are false, return the event\n             */\n            if (!relY && !relX) {\n                return;\n            }\n\n\n            /**\n             * Get the ripple color\n             */\n            var rippleColor = self.getRipplesColor($element);\n\n\n            /**\n             * Create the ripple element\n             */\n            var $ripple = $(\"<div></div>\");\n\n            $ripple\n                .addClass(\"ripple\")\n                .css({\n                    \"left\": relX,\n                    \"top\": relY,\n                    \"background-color\": rippleColor\n                });\n\n\n            /**\n             * Append the ripple to the wrapper\n             */\n            $wrapper.append($ripple);\n\n\n            /**\n             * Make sure the ripple has the styles applied (ugly hack but it works)\n             */\n            (function() { return window.getComputedStyle($ripple[0]).opacity; })();\n\n\n            /**\n             * Turn on the ripple animation\n             */\n            self.rippleOn($element, $ripple);\n\n\n            /**\n             * Call the rippleEnd function when the transition \"on\" ends\n             */\n            setTimeout(function() {\n                self.rippleEnd($ripple);\n            }, 500);\n\n\n            /**\n             * Detect when the user leaves the element\n             */\n            $element.on(\"mouseup mouseleave touchend\", function() {\n                $ripple.data(\"mousedown\", \"off\");\n\n                if ($ripple.data(\"animating\") === \"off\") {\n                    self.rippleOut($ripple);\n                }\n            });\n\n        });\n    };\n\n\n    /**\n     * Get the new size based on the element height/width and the ripple width\n     */\n    Ripples.prototype.getNewSize = function($element, $ripple) {\n\n        return (Math.max($element.outerWidth(), $element.outerHeight()) / $ripple.outerWidth()) * 2.5;\n    };\n\n\n    /**\n     * Get the relX\n     */\n    Ripples.prototype.getRelX = function($wrapper, event) {\n        var wrapperOffset = $wrapper.offset();\n\n        if (!self.isTouch()) {\n            /**\n             * Get the mouse position relative to the ripple wrapper\n             */\n            return event.pageX - wrapperOffset.left;\n        } else {\n            /**\n             * Make sure the user is using only one finger and then get the touch\n             * position relative to the ripple wrapper\n             */\n            event = event.originalEvent;\n\n            if (event.touches.length === 1) {\n                return event.touches[0].pageX - wrapperOffset.left;\n            }\n\n            return false;\n        }\n    };\n\n\n    /**\n     * Get the relY\n     */\n    Ripples.prototype.getRelY = function($wrapper, event) {\n        var wrapperOffset = $wrapper.offset();\n\n        if (!self.isTouch()) {\n            /**\n             * Get the mouse position relative to the ripple wrapper\n             */\n            return event.pageY - wrapperOffset.top;\n        } else {\n            /**\n             * Make sure the user is using only one finger and then get the touch\n             * position relative to the ripple wrapper\n             */\n            event = event.originalEvent;\n\n            if (event.touches.length === 1) {\n                return event.touches[0].pageY - wrapperOffset.top;\n            }\n\n            return false;\n        }\n    };\n\n\n    /**\n     * Get the ripple color\n     */\n    Ripples.prototype.getRipplesColor = function($element) {\n\n        var color = $element.data(\"ripple-color\") ? $element.data(\"ripple-color\") : window.getComputedStyle($element[0]).color;\n\n        return color;\n    };\n\n\n    /**\n     * Verify if the client browser has transistion support\n     */\n    Ripples.prototype.hasTransitionSupport = function() {\n        var thisBody = document.body || document.documentElement;\n        var thisStyle = thisBody.style;\n\n        var support = (\n            thisStyle.transition !== undefined ||\n            thisStyle.WebkitTransition !== undefined ||\n            thisStyle.MozTransition !== undefined ||\n            thisStyle.MsTransition !== undefined ||\n            thisStyle.OTransition !== undefined\n        );\n\n        return support;\n    };\n\n\n    /**\n     * Verify if the client is using a mobile device\n     */\n    Ripples.prototype.isTouch = function() {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    };\n\n\n    /**\n     * End the animation of the ripple\n     */\n    Ripples.prototype.rippleEnd = function($ripple) {\n        $ripple.data(\"animating\", \"off\");\n\n        if ($ripple.data(\"mousedown\") === \"off\") {\n            self.rippleOut($ripple);\n        }\n    };\n\n\n    /**\n     * Turn off the ripple effect\n     */\n    Ripples.prototype.rippleOut = function($ripple) {\n        $ripple.off();\n\n        if (self.hasTransitionSupport()) {\n            $ripple.addClass(\"ripple-out\");\n        } else {\n            $ripple.animate({ \"opacity\": 0 }, 100, function() {\n                $ripple.trigger(\"transitionend\");\n            });\n        }\n\n        $ripple.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n            $ripple.remove();\n        });\n    };\n\n\n    /**\n     * Turn on the ripple effect\n     */\n    Ripples.prototype.rippleOn = function($element, $ripple) {\n        var size = self.getNewSize($element, $ripple);\n\n        if (self.hasTransitionSupport()) {\n            $ripple\n                .css({\n                    \"-ms-transform\": \"scale(\" + size + \")\",\n                    \"-moz-transform\": \"scale(\" + size + \")\",\n                    \"-webkit-transform\": \"scale(\" + size + \")\",\n                    \"transform\": \"scale(\" + size + \")\"\n                })\n                .addClass(\"ripple-on\")\n                .data(\"animating\", \"on\")\n                .data(\"mousedown\", \"on\");\n        } else {\n            $ripple.animate({\n                \"width\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n                \"height\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n                \"margin-left\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n                \"margin-top\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n                \"opacity\": 0.2\n            }, 500, function() {\n                $ripple.trigger(\"transitionend\");\n            });\n        }\n    };\n\n\n    /**\n     * Create the jquery plugin function\n     */\n    $.fn.ripples = function(options) {\n        return this.each(function() {\n            if (!$.data(this, \"plugin_\" + ripples)) {\n                $.data(this, \"plugin_\" + ripples, new Ripples(this, options));\n            }\n        });\n    };\n\n\n    return $;\n});"]}