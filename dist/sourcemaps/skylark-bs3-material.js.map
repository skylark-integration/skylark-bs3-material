{"version":3,"sources":["skylark-bs3-material.js"],"names":["define","$","_addFormGroupFocus","element","$element","prop","closest","addClass","_toggleTypeFocus","$input","disabledToggleType","is","material","options","checkboxElements","radioElements","hover","$i","this","find","isDisabled","state","$target","hasClass","length","toggleClass","_toggleDisabledState","_removeFormGroupFocus","removeClass","expr","notmdproc","obj","data","validate","input","ripples","checkbox","togglebutton","radio","arrive","autofill","withRipples","join","inputElements","togglebuttonElements","selector","filter","after","each","$formGroup","attr","wrap","removeAttr","input-lg","input-sm","legacySize","standardSize","placeholder","id","forAttribute","val","attachInputEventHandlers","document","on","e","evt","which","ctrlKey","metaKey","altKey","_isChar","isValid","checkValidity","value","files","i","file","name","substring","loading","setInterval","$this","trigger","setTimeout","clearInterval","attachAutofillEventHandlers","focused","$inputs","parents","not","init","extend","$document","fn","self","defaults","Ripples","_defaults","_name","prototype","event","isTouch","type","append","$wrapper","children","relY","getRelY","relX","getRelX","rippleColor","getRipplesColor","$ripple","css","left","top","background-color","window","getComputedStyle","opacity","rippleOn","rippleEnd","rippleOut","getNewSize","Math","max","outerWidth","outerHeight","wrapperOffset","offset","originalEvent","touches","pageX","pageY","color","hasTransitionSupport","thisBody","body","documentElement","thisStyle","style","support","undefined","transition","WebkitTransition","MozTransition","MsTransition","OTransition","test","navigator","userAgent","off","animate","remove","size","-ms-transform","-moz-transform","-webkit-transform","transform","width","height","margin-left","margin-top","main"],"mappings":"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","file":"../skylark-bs3-material.js","sourcesContent":["/* globals jQuery */\ndefine('skylark-bs3-material/main',[\n    \"skylark-jquery\"\n],function($) {\n    // Selector to select only not already processed elements\n    $.expr[\":\"].notmdproc = function(obj) {\n        if ($(obj).data(\"mdproc\")) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    function _isChar(evt) {\n        if (typeof evt.which == \"undefined\") {\n            return true;\n        } else if (typeof evt.which == \"number\" && evt.which > 0) {\n            return (!evt.ctrlKey &&\n                !evt.metaKey &&\n                !evt.altKey &&\n                evt.which != 8 // backspace\n                &&\n                evt.which != 9 // tab\n                &&\n                evt.which != 13 // enter\n                &&\n                evt.which != 16 // shift\n                &&\n                evt.which != 17 // ctrl\n                &&\n                evt.which != 20 // caps lock\n                &&\n                evt.which != 27 // escape\n            );\n        }\n        return false;\n    }\n\n    function _addFormGroupFocus(element) {\n        var $element = $(element);\n        if (!$element.prop('disabled')) { // this is showing as undefined on chrome but works fine on firefox??\n            $element.closest(\".form-group\").addClass(\"is-focused\");\n        }\n    }\n\n    function _toggleDisabledState($element, state) {\n        var $target;\n        if ($element.hasClass('checkbox-inline') || $element.hasClass('radio-inline')) {\n            $target = $element;\n        } else {\n            $target = $element.closest('.checkbox').length ? $element.closest('.checkbox') : $element.closest('.radio');\n        }\n        return $target.toggleClass('disabled', state);\n    }\n\n    function _toggleTypeFocus($input) {\n        var disabledToggleType = false;\n        if ($input.is($.material.options.checkboxElements) || $input.is($.material.options.radioElements)) {\n            disabledToggleType = true;\n        }\n        $input.closest('label').hover(function() {\n                var $i = $(this).find('input');\n                var isDisabled = $i.prop('disabled'); // hack because the _addFormGroupFocus() wasn't identifying the property on chrome\n                if (disabledToggleType) {\n                    _toggleDisabledState($(this), isDisabled);\n                }\n                if (!isDisabled) {\n                    _addFormGroupFocus($i); // need to find the input so we can check disablement\n                }\n            },\n            function() {\n                _removeFormGroupFocus($(this).find('input'));\n            });\n    }\n\n    function _removeFormGroupFocus(element) {\n        $(element).closest(\".form-group\").removeClass(\"is-focused\"); // remove class from form-group\n    }\n\n    $.material = {\n        \"options\": {\n            // These options set what will be started by $.material.init()\n            \"validate\": true,\n            \"input\": true,\n            \"ripples\": true,\n            \"checkbox\": true,\n            \"togglebutton\": true,\n            \"radio\": true,\n            \"arrive\": true,\n            \"autofill\": false,\n\n            \"withRipples\": [\n                \".btn:not(.btn-link)\",\n                \".card-image\",\n                \".navbar a:not(.withoutripple)\",\n                \".dropdown-menu a\",\n                \".nav-tabs a:not(.withoutripple)\",\n                \".withripple\",\n                \".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"\n            ].join(\",\"),\n            \"inputElements\": \"input.form-control, textarea.form-control, select.form-control\",\n            \"checkboxElements\": \".checkbox > label > input[type=checkbox], label.checkbox-inline > input[type=checkbox]\",\n            \"togglebuttonElements\": \".togglebutton > label > input[type=checkbox]\",\n            \"radioElements\": \".radio > label > input[type=radio], label.radio-inline > input[type=radio]\"\n        },\n        \"checkbox\": function(selector) {\n            // Add fake-checkbox to material checkboxes\n            var $input = $((selector) ? selector : this.options.checkboxElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='checkbox-material'><span class='check'></span></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"togglebutton\": function(selector) {\n            // Add fake-checkbox to material checkboxes\n            var $input = $((selector) ? selector : this.options.togglebuttonElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='toggle'></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"radio\": function(selector) {\n            // Add fake-radio to material radios\n            var $input = $((selector) ? selector : this.options.radioElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .after(\"<span class='circle'></span><span class='check'></span>\");\n\n            _toggleTypeFocus($input);\n        },\n        \"input\": function(selector) {\n            $((selector) ? selector : this.options.inputElements)\n                .filter(\":notmdproc\")\n                .data(\"mdproc\", true)\n                .each(function() {\n                    var $input = $(this);\n\n                    // Requires form-group standard markup (will add it if necessary)\n                    var $formGroup = $input.closest(\".form-group\"); // note that form-group may be grandparent in the case of an input-group\n                    if ($formGroup.length === 0 && $input.attr('type') !== \"hidden\" && !$input.attr('hidden')) {\n                        $input.wrap(\"<div class='form-group'></div>\");\n                        $formGroup = $input.closest(\".form-group\"); // find node after attached (otherwise additional attachments don't work)\n                    }\n\n                    // Legacy - Add hint label if using the old shorthand data-hint attribute on the input\n                    if ($input.attr(\"data-hint\")) {\n                        $input.after(\"<p class='help-block'>\" + $input.attr(\"data-hint\") + \"</p>\");\n                        $input.removeAttr(\"data-hint\");\n                    }\n\n                    // Legacy - Change input-sm/lg to form-group-sm/lg instead (preferred standard and simpler css/less variants)\n                    var legacySizes = {\n                        \"input-lg\": \"form-group-lg\",\n                        \"input-sm\": \"form-group-sm\"\n                    };\n                    $.each(legacySizes, function(legacySize, standardSize) {\n                        if ($input.hasClass(legacySize)) {\n                            $input.removeClass(legacySize);\n                            $formGroup.addClass(standardSize);\n                        }\n                    });\n\n                    // Legacy - Add label-floating if using old shorthand <input class=\"floating-label\" placeholder=\"foo\">\n                    if ($input.hasClass(\"floating-label\")) {\n                        var placeholder = $input.attr(\"placeholder\");\n                        $input.attr(\"placeholder\", null).removeClass(\"floating-label\");\n                        var id = $input.attr(\"id\");\n                        var forAttribute = \"\";\n                        if (id) {\n                            forAttribute = \"for='\" + id + \"'\";\n                        }\n                        $formGroup.addClass(\"label-floating\");\n                        $input.after(\"<label \" + forAttribute + \"class='control-label'>\" + placeholder + \"</label>\");\n                    }\n\n                    // Set as empty if is empty (damn I must improve this...)\n                    if ($input.val() === null || $input.val() == \"undefined\" || $input.val() === \"\") {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n\n                    // Support for file input\n                    if ($formGroup.find(\"input[type=file]\").length > 0) {\n                        $formGroup.addClass(\"is-fileinput\");\n                    }\n                });\n        },\n        \"attachInputEventHandlers\": function() {\n            var validate = this.options.validate;\n\n            $(document)\n                .on(\"keydown paste\", \".form-control\", function(e) {\n                    if (_isChar(e)) {\n                        $(this).closest(\".form-group\").removeClass(\"is-empty\");\n                    }\n                })\n                .on(\"keyup change\", \".form-control\", function() {\n                    var $input = $(this);\n                    var $formGroup = $input.closest(\".form-group\");\n                    var isValid = (typeof $input[0].checkValidity === \"undefined\" || $input[0].checkValidity());\n\n                    if ($input.val() === \"\") {\n                        $formGroup.addClass(\"is-empty\");\n                    } else {\n                        $formGroup.removeClass(\"is-empty\");\n                    }\n\n                    // Validation events do not bubble, so they must be attached directly to the input: http://jsfiddle.net/PEpRM/1/\n                    //  Further, even the bind method is being caught, but since we are already calling #checkValidity here, just alter\n                    //  the form-group on change.\n                    //\n                    // NOTE: I'm not sure we should be intervening regarding validation, this seems better as a README and snippet of code.\n                    //        BUT, I've left it here for backwards compatibility.\n                    if (validate) {\n                        if (isValid) {\n                            $formGroup.removeClass(\"has-error\");\n                        } else {\n                            $formGroup.addClass(\"has-error\");\n                        }\n                    }\n                })\n                .on(\"focusin\", \".form-control, .form-group.is-fileinput\", function() {\n                    _addFormGroupFocus(this);\n                })\n                .on(\"focusout\", \".form-control, .form-group.is-fileinput\", function() {\n                    _removeFormGroupFocus(this);\n                })\n                // make sure empty is added back when there is a programmatic value change.\n                //  NOTE: programmatic changing of value using $.val() must trigger the change event i.e. $.val('x').trigger('change')\n                .on(\"change\", \".form-group input\", function() {\n                    var $input = $(this);\n                    if ($input.attr(\"type\") == \"file\") {\n                        return;\n                    }\n\n                    var $formGroup = $input.closest(\".form-group\");\n                    var value = $input.val();\n                    if (value) {\n                        $formGroup.removeClass(\"is-empty\");\n                    } else {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n                })\n                // set the fileinput readonly field with the name of the file\n                .on(\"change\", \".form-group.is-fileinput input[type='file']\", function() {\n                    var $input = $(this);\n                    var $formGroup = $input.closest(\".form-group\");\n                    var value = \"\";\n                    $.each(this.files, function(i, file) {\n                        value += file.name + \", \";\n                    });\n                    value = value.substring(0, value.length - 2);\n                    if (value) {\n                        $formGroup.removeClass(\"is-empty\");\n                    } else {\n                        $formGroup.addClass(\"is-empty\");\n                    }\n                    $formGroup.find(\"input.form-control[readonly]\").val(value);\n                });\n        },\n        \"ripples\": function(selector) {\n            $((selector) ? selector : this.options.withRipples).ripples();\n        },\n        \"autofill\": function() {\n            // This part of code will detect autofill when the page is loading (username and password inputs for example)\n            var loading = setInterval(function() {\n                $(\"input[type!=checkbox]\").each(function() {\n                    var $this = $(this);\n                    if ($this.val() && $this.val() !== $this.attr(\"value\")) {\n                        $this.trigger(\"change\");\n                    }\n                });\n            }, 100);\n\n            // After 10 seconds we are quite sure all the needed inputs are autofilled then we can stop checking them\n            setTimeout(function() {\n                clearInterval(loading);\n            }, 10000);\n        },\n        \"attachAutofillEventHandlers\": function() {\n            // Listen on inputs of the focused form (because user can select from the autofill dropdown only when the input has focus)\n            var focused;\n            $(document)\n                .on(\"focus\", \"input\", function() {\n                    var $inputs = $(this).parents(\"form\").find(\"input\").not(\"[type=file]\");\n                    focused = setInterval(function() {\n                        $inputs.each(function() {\n                            var $this = $(this);\n                            if ($this.val() !== $this.attr(\"value\")) {\n                                $this.trigger(\"change\");\n                            }\n                        });\n                    }, 100);\n                })\n                .on(\"blur\", \".form-group input\", function() {\n                    clearInterval(focused);\n                });\n        },\n        \"init\": function(options) {\n            this.options = $.extend({}, this.options, options);\n            var $document = $(document);\n\n            if ($.fn.ripples && this.options.ripples) {\n                this.ripples();\n            }\n            if (this.options.input) {\n                this.input();\n                this.attachInputEventHandlers();\n            }\n            if (this.options.checkbox) {\n                this.checkbox();\n            }\n            if (this.options.togglebutton) {\n                this.togglebutton();\n            }\n            if (this.options.radio) {\n                this.radio();\n            }\n            if (this.options.autofill) {\n                this.autofill();\n                this.attachAutofillEventHandlers();\n            }\n\n            if (document.arrive && this.options.arrive) {\n                if ($.fn.ripples && this.options.ripples) {\n                    $document.arrive(this.options.withRipples, function() {\n                        $.material.ripples($(this));\n                    });\n                }\n                if (this.options.input) {\n                    $document.arrive(this.options.inputElements, function() {\n                        $.material.input($(this));\n                    });\n                }\n                if (this.options.checkbox) {\n                    $document.arrive(this.options.checkboxElements, function() {\n                        $.material.checkbox($(this));\n                    });\n                }\n                if (this.options.radio) {\n                    $document.arrive(this.options.radioElements, function() {\n                        $.material.radio($(this));\n                    });\n                }\n                if (this.options.togglebutton) {\n                    $document.arrive(this.options.togglebuttonElements, function() {\n                        $.material.togglebutton($(this));\n                    });\n                }\n\n            }\n        }\n    };\n\n    /**\n     * Define the name of the plugin\n     */\n    var ripples = \"ripples\";\n\n\n    /**\n     * Get an instance of the plugin\n     */\n    var self = null;\n\n\n    /**\n     * Define the defaults of the plugin\n     */\n    var defaults = {};\n\n\n    /**\n     * Create the main plugin function\n     */\n    function Ripples(element, options) {\n        self = this;\n\n        this.element = $(element);\n\n        this.options = $.extend({}, defaults, options);\n\n        this._defaults = defaults;\n        this._name = ripples;\n\n        this.init();\n    }\n\n\n    /**\n     * Initialize the plugin\n     */\n    Ripples.prototype.init = function() {\n        var $element = this.element;\n\n        $element.on(\"mousedown touchstart\", function(event) {\n            /**\n             * Verify if the user is just touching on a device and return if so\n             */\n            if (self.isTouch() && event.type === \"mousedown\") {\n                return;\n            }\n\n\n            /**\n             * Verify if the current element already has a ripple wrapper element and\n             * creates if it doesn't\n             */\n            if (!($element.find(\".ripple-container\").length)) {\n                $element.append(\"<div class=\\\"ripple-container\\\"></div>\");\n            }\n\n\n            /**\n             * Find the ripple wrapper\n             */\n            var $wrapper = $element.children(\".ripple-container\");\n\n\n            /**\n             * Get relY and relX positions\n             */\n            var relY = self.getRelY($wrapper, event);\n            var relX = self.getRelX($wrapper, event);\n\n\n            /**\n             * If relY and/or relX are false, return the event\n             */\n            if (!relY && !relX) {\n                return;\n            }\n\n\n            /**\n             * Get the ripple color\n             */\n            var rippleColor = self.getRipplesColor($element);\n\n\n            /**\n             * Create the ripple element\n             */\n            var $ripple = $(\"<div></div>\");\n\n            $ripple\n                .addClass(\"ripple\")\n                .css({\n                    \"left\": relX,\n                    \"top\": relY,\n                    \"background-color\": rippleColor\n                });\n\n\n            /**\n             * Append the ripple to the wrapper\n             */\n            $wrapper.append($ripple);\n\n\n            /**\n             * Make sure the ripple has the styles applied (ugly hack but it works)\n             */\n            (function() { return window.getComputedStyle($ripple[0]).opacity; })();\n\n\n            /**\n             * Turn on the ripple animation\n             */\n            self.rippleOn($element, $ripple);\n\n\n            /**\n             * Call the rippleEnd function when the transition \"on\" ends\n             */\n            setTimeout(function() {\n                self.rippleEnd($ripple);\n            }, 500);\n\n\n            /**\n             * Detect when the user leaves the element\n             */\n            $element.on(\"mouseup mouseleave touchend\", function() {\n                $ripple.data(\"mousedown\", \"off\");\n\n                if ($ripple.data(\"animating\") === \"off\") {\n                    self.rippleOut($ripple);\n                }\n            });\n\n        });\n    };\n\n\n    /**\n     * Get the new size based on the element height/width and the ripple width\n     */\n    Ripples.prototype.getNewSize = function($element, $ripple) {\n\n        return (Math.max($element.outerWidth(), $element.outerHeight()) / $ripple.outerWidth()) * 2.5;\n    };\n\n\n    /**\n     * Get the relX\n     */\n    Ripples.prototype.getRelX = function($wrapper, event) {\n        var wrapperOffset = $wrapper.offset();\n\n        if (!self.isTouch()) {\n            /**\n             * Get the mouse position relative to the ripple wrapper\n             */\n            return event.pageX - wrapperOffset.left;\n        } else {\n            /**\n             * Make sure the user is using only one finger and then get the touch\n             * position relative to the ripple wrapper\n             */\n            event = event.originalEvent;\n\n            if (event.touches.length === 1) {\n                return event.touches[0].pageX - wrapperOffset.left;\n            }\n\n            return false;\n        }\n    };\n\n\n    /**\n     * Get the relY\n     */\n    Ripples.prototype.getRelY = function($wrapper, event) {\n        var wrapperOffset = $wrapper.offset();\n\n        if (!self.isTouch()) {\n            /**\n             * Get the mouse position relative to the ripple wrapper\n             */\n            return event.pageY - wrapperOffset.top;\n        } else {\n            /**\n             * Make sure the user is using only one finger and then get the touch\n             * position relative to the ripple wrapper\n             */\n            event = event.originalEvent;\n\n            if (event.touches.length === 1) {\n                return event.touches[0].pageY - wrapperOffset.top;\n            }\n\n            return false;\n        }\n    };\n\n\n    /**\n     * Get the ripple color\n     */\n    Ripples.prototype.getRipplesColor = function($element) {\n\n        var color = $element.data(\"ripple-color\") ? $element.data(\"ripple-color\") : window.getComputedStyle($element[0]).color;\n\n        return color;\n    };\n\n\n    /**\n     * Verify if the client browser has transistion support\n     */\n    Ripples.prototype.hasTransitionSupport = function() {\n        var thisBody = document.body || document.documentElement;\n        var thisStyle = thisBody.style;\n\n        var support = (\n            thisStyle.transition !== undefined ||\n            thisStyle.WebkitTransition !== undefined ||\n            thisStyle.MozTransition !== undefined ||\n            thisStyle.MsTransition !== undefined ||\n            thisStyle.OTransition !== undefined\n        );\n\n        return support;\n    };\n\n\n    /**\n     * Verify if the client is using a mobile device\n     */\n    Ripples.prototype.isTouch = function() {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    };\n\n\n    /**\n     * End the animation of the ripple\n     */\n    Ripples.prototype.rippleEnd = function($ripple) {\n        $ripple.data(\"animating\", \"off\");\n\n        if ($ripple.data(\"mousedown\") === \"off\") {\n            self.rippleOut($ripple);\n        }\n    };\n\n\n    /**\n     * Turn off the ripple effect\n     */\n    Ripples.prototype.rippleOut = function($ripple) {\n        $ripple.off();\n\n        if (self.hasTransitionSupport()) {\n            $ripple.addClass(\"ripple-out\");\n        } else {\n            $ripple.animate({ \"opacity\": 0 }, 100, function() {\n                $ripple.trigger(\"transitionend\");\n            });\n        }\n\n        $ripple.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n            $ripple.remove();\n        });\n    };\n\n\n    /**\n     * Turn on the ripple effect\n     */\n    Ripples.prototype.rippleOn = function($element, $ripple) {\n        var size = self.getNewSize($element, $ripple);\n\n        if (self.hasTransitionSupport()) {\n            $ripple\n                .css({\n                    \"-ms-transform\": \"scale(\" + size + \")\",\n                    \"-moz-transform\": \"scale(\" + size + \")\",\n                    \"-webkit-transform\": \"scale(\" + size + \")\",\n                    \"transform\": \"scale(\" + size + \")\"\n                })\n                .addClass(\"ripple-on\")\n                .data(\"animating\", \"on\")\n                .data(\"mousedown\", \"on\");\n        } else {\n            $ripple.animate({\n                \"width\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n                \"height\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n                \"margin-left\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n                \"margin-top\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n                \"opacity\": 0.2\n            }, 500, function() {\n                $ripple.trigger(\"transitionend\");\n            });\n        }\n    };\n\n\n    /**\n     * Create the jquery plugin function\n     */\n    $.fn.ripples = function(options) {\n        return this.each(function() {\n            if (!$.data(this, \"plugin_\" + ripples)) {\n                $.data(this, \"plugin_\" + ripples, new Ripples(this, options));\n            }\n        });\n    };\n\n\n    return $;\n});\ndefine('skylark-bs3-material', ['skylark-bs3-material/main'], function (main) { return main; });\n\n"]}